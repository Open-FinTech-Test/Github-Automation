name: Create Repo With Readme And Protection

on:
  push:
    branches: [ main ]

env:
  REVIEWER_COUNT: 1
  ORG_NAME: "${{ secrets.ORGANIZATION }}"

jobs:
  create-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Create Repository with branch protection
        run: |     

          IFS=',' read -r ACTION < <(head -n 1 repos.csv)
          echo "Action: $ACTION"

          if [ $ACTION == "create-repo" ]; then
            while IFS=',' read -r REPO_NAME VISIBILITY || [ -n "$REPO_NAME" ]; do
              if [ -z "$VISIBILITY" ]; then
                VISIBILITY="public"
              fi  
              
              echo "Repo: $REPO_NAME"
              echo "url: https://api.github.com/repos/${{ env.ORG_NAME }}/$REPO_NAME/branches/main/protection"

              curl -X POST \
                -H "Authorization: token ${{ secrets.ORG_ADMIN_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/orgs/${{ env.ORG_NAME }}/repos \
                -d '{"name": "'$REPO_NAME'", "'$VISIBILITY'": true, "auto_init": true, "description": "This is my new repository"}'
              
              curl --location --request PUT "https://api.github.com/repos/${{ env.ORG_NAME }}/$REPO_NAME/branches/main/protection" \
              --header "Accept: application/vnd.github.luke-cage-preview+json" \
              --header "Authorization: token ${{ secrets.ORG_ADMIN_TOKEN }}" \
              --header "Content-Type: application/json" \
              --data-raw '{
              "required_status_checks": null, 
              "enforce_admins": true, 
              "required_pull_request_reviews": 
              {
                "dismiss_stale_reviews": true,
                "require_code_owner_reviews": true,
                "required_approving_review_count": ${{env.REVIEWER_COUNT}}
              }, 
              "restrictions": null
              }'             
            done < <(tail -n +2 repos.csv)
            
          elif [ $ACTION == "delete-repo" ]; then
           while IFS=',' read -r REPO_NAME VISIBILITY || [ -n "$REPO_NAME" ]; do
             curl -X DELETE -H "Authorization: token ${{ secrets.ORG_ADMIN_TOKEN }}" "https://api.github.com/repos/${{ env.ORG_NAME }}/$REPO_NAME"
           done < <(tail -n +2 repos.csv)  
            
          fi   
            
      - name: Upload CSV artifact
        uses: actions/upload-artifact@v2
        with:
          name: repos-csv
          path: repos.csv    
          
          
#          IFS=',' read -r ACTION < <(head -n 1 repos.csv)
#          echo "Action: $ACTION"
          
#          if [ $ACTION == "create-repo" ]; then
#            while IFS=',' read -r REPO_NAME VISIBILITY || [ -n "$REPO_NAME" ]; do
#              if [ -z "$VISIBILITY" ]; then
#                VISIBILITY="public"
#              fi   
